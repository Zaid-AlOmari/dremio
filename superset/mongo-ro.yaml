---
apiVersion: v1
kind: Service
metadata:
  name: mongo-ro
  labels:
    name: mongo-ro
    env: prod
spec:
  ports:
    - port: 27017
      targetPort: 27017
  clusterIP: None
  selector:
    role: mongo-ro
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-ro
spec:
  serviceName: "mongo-ro"
  selector:
    matchLabels:
      role: mongo-ro
  replicas: 1
  template:
    metadata:
      labels:
        role: mongo-ro
        env: prod
    spec:
      terminationGracePeriodSeconds: 10
      tolerations:
        - key: "kubernetes.azure.com/scalesetpriority"
          operator: "Equal"
          value: "spot"
          effect: "NoSchedule"
      containers:
        - name: mongo-ro
          image: mongo:6
          command:
            - mongod
            - "--replSet"
            - rs0
            - "--bind_ip"
            - 0.0.0.0
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: azure-managed-premium-disk
              mountPath: /data/db
          resources:
            limits:
              cpu: 2000m
              memory: 4000Mi
            requests:
              cpu: 500m
              memory: 2000Mi
  volumeClaimTemplates:
    - metadata:
        name: azure-managed-premium-disk
        annotations:
          volume.beta.kubernetes.io/storage-class: "managed-premium"
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 32Gi
---
# rs.add({
#   "host": "mongo-ro-0.mongo-ro.lakehouse-mongo.svc.cluster.local",
#   "arbiterOnly": false,
#   "buildIndexes": true,
#   "hidden": true,
#   "priority": 0,
#   "tags": { "usage": "analytics" },
#   "votes": 0
# })

# mysql+mysqldb://mongo-bi.lakehouse-mongo.svc.cluster.local:3307/carts
